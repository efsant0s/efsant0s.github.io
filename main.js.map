{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/blucake-enviar-email/blucake-enviar-email.component.css","webpack:///./src/app/blucake-enviar-email/blucake-enviar-email.component.html","webpack:///./src/app/blucake-enviar-email/blucake-enviar-email.component.ts","webpack:///./src/app/blucake-home/blucake-home-detalhe/blucake-home-detalhe.component.css","webpack:///./src/app/blucake-home/blucake-home-detalhe/blucake-home-detalhe.component.html","webpack:///./src/app/blucake-home/blucake-home-detalhe/blucake-home-detalhe.component.ts","webpack:///./src/app/blucake-home/blucake-home.component.css","webpack:///./src/app/blucake-home/blucake-home.component.html","webpack:///./src/app/blucake-home/blucake-home.component.ts","webpack:///./src/app/blucake-ingredientes/blucake-ingredientes.component.css","webpack:///./src/app/blucake-ingredientes/blucake-ingredientes.component.html","webpack:///./src/app/blucake-ingredientes/blucake-ingredientes.component.ts","webpack:///./src/app/blucake-login/blucake-login.component.css","webpack:///./src/app/blucake-login/blucake-login.component.html","webpack:///./src/app/blucake-login/blucake-login.component.ts","webpack:///./src/app/blucake-navbar/blucake-navbar.component.css","webpack:///./src/app/blucake-navbar/blucake-navbar.component.html","webpack:///./src/app/blucake-navbar/blucake-navbar.component.ts","webpack:///./src/app/blucake-receitas/blucake-receitas.component.css","webpack:///./src/app/blucake-receitas/blucake-receitas.component.html","webpack:///./src/app/blucake-receitas/blucake-receitas.component.ts","webpack:///./src/app/blucake-routing/blucake-routing.module.ts","webpack:///./src/app/blucake-services/MessageService.ts","webpack:///./src/app/blucake-services/blucake.service.ts","webpack:///./src/app/blucake-services/enviar-email.ts","webpack:///./src/app/blucake-services/home.service.ts","webpack:///./src/app/blucake-services/ingredientes.service.ts","webpack:///./src/app/blucake-services/login.service.ts","webpack:///./src/app/blucake-services/storage.service.ts","webpack:///./src/app/blucake-services/usuario.service.ts","webpack:///./src/app/blucake-usuario/blucake-usuario.component.css","webpack:///./src/app/blucake-usuario/blucake-usuario.component.html","webpack:///./src/app/blucake-usuario/blucake-usuario.component.ts","webpack:///./src/app/config/api.config.ts","webpack:///./src/app/config/storage_keys.config.ts","webpack:///./src/app/guard/auth.guard.ts","webpack:///./src/app/interceptors.ts/auht.interceptors.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,+F;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPoD;AACnB;AACjB;AAEM;AACgC;AAC1B;AACsB;AAEtB;AAE2B;AACH;AACG;AACM;AACH;AACnB;AACI;AACrB;AACqB;AACE;AACR;AAC2B;AACY;AAEjC;AAC6C;AAC5C;AACF;AACiC;AAmCpG;IAAA;IAAyB,CAAC;IAAb,SAAS;QAjCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,yFAAoB;gBACpB,6FAAqB;gBACrB,mGAAuB;gBACvB,gGAAsB;gBACtB,sGAAwB;gBACxB,kHAA4B;gBAC5B,8HAA2B;gBAC3B,iHAA2B;aAC5B;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,4FAAoB;gBACpB,kEAAmB;gBACnB,qEAAgB;gBAChB,kEAAmB;aAChB;YACL,SAAS,EAAE,CAAC,6EAAY;gBACZ,iFAAc;gBACd,iFAAc;gBACd,4DAAS;gBACT,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,mFAAe,EAAE,KAAK,EAAE,IAAI,EAAE;gBACtE,2EAAW;gBACX,yFAAkB;gBAClB,iFAAc;gBACd,kFAAkB;gBAClB,gFAAc;aACf;YACX,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AChEtB,mB;;;;;;;;;;;ACAA,sWAAsW,yGAAyG,iBAAiB,giD;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACC9a;AACM;AACc;AACF;AACC;AAOrE;IAOE,qCAAoB,WAAwB,EAClC,kBAAsC,EACtC,cAA8B,EAC9B,cAA8B;QAHpB,gBAAW,GAAX,WAAW,CAAa;QAClC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAE7C,8CAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,aAAG;YAC5C,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;YAC9B,KAAI,CAAC,eAAe,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,KAAK,EAAE,CAAC,IAAI,CAAC;YACb,QAAQ,EAAE,CAAC,IAAI,CAAC;YAChB,QAAQ,EAAE,CAAC,IAAI,CAAC;YAChB,IAAI,EAAE,CAAC,IAAI,CAAC;SACb,CAAC,CAAC;IACL,CAAC;IAED,8DAAwB,GAAxB;QACE,IAAM,cAAc,GAAG;YACrB,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,KAAK;YAChD,QAAQ,EAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,IAAI;YAC/C,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,EAAE;YAC7C,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK;YACvC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI;YACrC,SAAS,EAAE,CAAC;YACZ,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,EAAE;YACrC,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI;YACzC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ;YACxC,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ;SACzC,CAAC;QAEF,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,aAAG;YAC/D,QAAQ;YACR,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;gBACb,KAAK,CAAC,2BAA2B,CAAC,CAAC;YACrC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IA/CU,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;;;SAGrC,CAAC;yCAQiC,0DAAW;YACd,iFAAkB;YACtB,gFAAc;YACd,+EAAc;OAV7B,2BAA2B,CAgDvC;IAAD,kCAAC;CAAA;AAhDuC;;;;;;;;;;;;ACZxC,0CAA0C,wBAAwB,2BAA2B,OAAO,iCAAiC,yBAAyB,OAAO,W;;;;;;;;;;;ACArK,icAAic,kBAAkB,kOAAkO,oBAAoB,+CAA+C,uBAAuB,kVAAkV,YAAY,iFAAiF,sBAAsB,sFAAsF,eAAe,ujBAAujB,UAAU,gpBAAgpB,qBAAqB,kDAAkD,yO;;;;;;;;;;;;;;;;;;;;;;;;;;ACAn/E;AACpB;AACD;AAOzE;IAKE,qCAAoB,cAA8B,EAC9B,cAA8B;QAD9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAJlD,gBAAW,GAAG,EAAE,CAAC;QACjB,YAAO,GAAG,EAAE,CAAC;IAGyC,CAAC;IAEvD,8CAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,aAAG;YAC5C,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAbU,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;;;SAGrC,CAAC;yCAMoC,uFAAc;YACd,sFAAc;OANvC,2BAA2B,CAgBvC;IAAD,kCAAC;CAAA;AAhBuC;;;;;;;;;;;;ACTxC,+BAA+B,kBAAkB,OAAO,yCAAyC,mBAAmB,OAAO,sCAAsC,2BAA2B,OAAO,iCAAiC,2BAA2B,kBAAkB,oBAAoB,qBAAqB,OAAO,4CAA4C,qBAAqB,yBAAyB,OAAO,kCAAkC,wBAAwB,2BAA2B,OAAO,oBAAoB,yBAAyB,0BAA0B,0BAA0B,OAAO,S;;;;;;;;;;;ACAtmB,igDAAigD,YAAY,0ZAA0Z,UAAU,kEAAkE,yCAAyC,yiC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp9D;AACT;AACM;AACD;AAOpE;IAME,8BAAoB,WAAwB,EACxB,cAA8B,EAC9B,cAA8B;QAF9B,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAEvD,uCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,2CAAY,GAAZ;QAAA,iBAOC;QANC,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,aAAG;YAC9C,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;YACxB,EAAE,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,eAAK,IAAI,YAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,YAAY,CAAC,EAAtC,CAAsC,CAAC,CAAC;YACtF,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8CAAe,GAAf,UAAgB,GAAG;QACjB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IAED,4CAAa,GAAb,UAAc,GAAW;QACvB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QACrB,IAAI,CAAC,YAAY,EAAE,CAAC;IACzB,CAAC;IA/BU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAOiC,0EAAW;YACR,gFAAc;YACd,+EAAc;OARvC,oBAAoB,CAgChC;IAAD,2BAAC;CAAA;AAhCgC;;;;;;;;;;;;ACVjC,2DAA2D,oBAAoB,OAAO,4DAA4D,iCAAiC,wCAAwC,KAAK,C;;;;;;;;;;;ACAhO,g4CAAg4C,6CAA6C,qBAAqB,UAAU,6mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA15C;AAC4B;AACrC;AAC4B;AACb;AAEa;AASrE;IASE,sCAAoB,kBAAsC,EAChD,MAAc,EACd,cAA8B,EAC9B,WAAwB,EACxB,cAA8B;QAJpB,uBAAkB,GAAlB,kBAAkB,CAAoB;QAChD,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAPjC,gBAAW,GAAG,CAAC,CAAC;IAOqB,CAAC;IAE7C,+CAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAClD,EAAE,EAAE,CAAC,IAAI,CAAC;YACV,IAAI,EAAE,CAAC,IAAI,CAAC;YACZ,SAAS,EAAE,CAAC,IAAI,CAAC;SAClB,CAAC,CAAC;IACL,CAAC;IAED,yDAAkB,GAAlB;QAAA,iBAIC;QAHC,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC7D,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAM,GAAN;QAAA,iBAUC;QATC,IAAM,cAAc,GAAmB;YACrC,EAAE,EAAE,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,EAAE,IAAI,IAAI;YAC/C,IAAI,EAAE,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,IAAI;YAC3C,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,EAAE;YACxD,YAAY,EAAE,IAAI;SACnB,CAAC;QACF,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,aAAG;YACnE,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0DAAmB,GAAnB,UAAoB,GAAG;QACrB,IAAM,cAAc,GAAmB;YACrC,EAAE,EAAE,GAAG,CAAC,EAAE;YACV,IAAI,EAAE,GAAG,CAAC,IAAI;YACd,SAAS,EAAE,GAAG,CAAC,OAAO,CAAC,EAAE;YACzB,YAAY,EAAE,IAAI;SACnB,CAAC;QACF,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,aAAG;YACtE,QAAQ;QACV,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sDAAe,GAAf;QACE,kCAAkC;QAClC,iDAAiD;QACjD,oBAAoB;QACpB,uDAAuD;QACvD,4HAA4H;QAC5H,iFAAiF;QACjF,gFAAgF;QAChF,+EAA+E;QAC/E,gFAAgF;QAChF,yBAAyB;QACzB,yDAAyD;QACzD,oDAAoD;QACpD,aAAa;QACb,qBAAqB;QACrB,uEAAuE;QACvE,wEAAwE;QACxE,YAAY;QACZ,UAAU;QACV,UAAU;QACV,QAAQ;IACV,CAAC;IA3EU,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;;;SAGrC,CAAC;yCAUwC,yFAAkB;YACxC,sDAAM;YACE,gFAAc;YACjB,0DAAW;YACR,gFAAc;OAb7B,4BAA4B,CA4ExC;IAAD,mCAAC;CAAA;AA5EwC;;;;;;;;;;;;ACfzC,mB;;;;;;;;;;;ACAA,uyCAAuyC,mBAAmB,4mEAA4mE,mBAAmB,w3E;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA12G;AACvB;AACf;AACwB;AAEK;AAOtE;IA8BE,+BAAoB,MAAc,EACxB,WAAwB,EACxB,WAAyB,EACzB,kBAAsC;QAH5B,WAAM,GAAN,MAAM,CAAQ;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAc;QACzB,uBAAkB,GAAlB,kBAAkB,CAAoB;QA1BhD,UAAK,GAAe;YAClB,EAAE,EAAE,EAAE;YACN,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,EAAE;YACV,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,EAAE;YACf,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,EAAE;YACb,YAAY,EAAE,EAAE;YAChB,EAAE,EAAE,EAAE;YACN,GAAG,EAAE,EAAE;YACP,GAAG,EAAE,EAAE;YACP,MAAM,EAAE,EAAE;YACV,WAAW,EAAE,EAAE;YACf,MAAM,EAAE,EAAE;YACV,MAAM,EAAE,EAAE;YACV,MAAM,EAAE,EAAE;YACV,GAAG,EAAE,EAAE;YACP,YAAY,EAAE,EAAE;SACjB,CAAC;IAKkD,CAAC;IAErD,wCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,KAAK,EAAE,CAAC,IAAI,CAAC;YACb,KAAK,EAAE,CAAC,IAAI,CAAC;SACd,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC/C,SAAS,EAAE,CAAC,IAAI,CAAC;YACjB,UAAU,EAAE,CAAC,IAAI,CAAC;SACnB,CAAC,CAAC;IAEL,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC;QAC/C,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC;QAE/C,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAC1D,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACtC,KAAI,CAAC,WAAW,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;QACxC,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC;YACrC,KAAI,CAAC,SAAS,EAAE,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAClC,CAAC;IAED,gDAAgB,GAAhB;QACE,IAAM,SAAS,GAAG;YAChB,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS;YAClD,UAAU,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,UAAU;YACpD,SAAS,EAAE,CAAC;SACb,CAAC;QAEF,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,aAAG;YAC1D,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;gBACb,KAAK,CAAC,2BAA2B,CAAC,CAAC;YACrC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAS,GAAT;QACE,KAAK,CAAC,oBAAoB,CAAC,CAAC;IAC9B,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IAlFQ;QAAR,2DAAK,EAAE;;gEAAwB;IAFrB,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCA+B4B,sDAAM;YACX,0DAAW;YACX,4EAAY;YACL,iFAAkB;OAjCrC,qBAAqB,CAqFjC;IAAD,4BAAC;CAAA;AArFiC;;;;;;;;;;;;ACZlC,yBAAyB,oCAAoC,KAAK,K;;;;;;;;;;;ACAlE,47D;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACe;AACI;AAC5B;AAOzC;IAIE,gCAAoB,WAAyB,EACzB,cAA8B,EAC9B,MAAc;QAFd,gBAAW,GAAX,WAAW,CAAc;QACzB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,yCAAQ,GAAR;QAAA,iBAUC;QARC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC;QAGD,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC,iBAAO;YAC9C,KAAI,CAAC,WAAW,GAAG,OAAO,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IAvBU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAKiC,4EAAY;YACT,gFAAc;YACtB,sDAAM;OANvB,sBAAsB,CAwBlC;IAAD,6BAAC;CAAA;AAxBkC;;;;;;;;;;;;ACVnC,mB;;;;;;;;;;;ACAA,yD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,2CAAQ,GAAR;IACA,CAAC;IALU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;;OACW,wBAAwB,CAOpC;IAAD,+BAAC;CAAA;AAPoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPI;AACc;AACuB;AACS;AACvC;AAC0C;AACY;AAItG,IAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,yFAAoB,EAAC;IAC/C,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,kGAAuB,EAAE,WAAW,EAAE,CAAC,2DAAS,CAAC,EAAC;IAC/E,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,qGAAwB,EAAE,WAAW,EAAE,CAAC,2DAAS,CAAC,EAAC;IACjF,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,iHAA4B,EAAE,WAAW,EAAE,CAAC,2DAAS,CAAC,EAAC;IACzF,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE;IACnD,EAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAC;CAClC,CAAC;AAQF;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QAJhC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAE,4DAAY,CAAE;YACzB,OAAO,EAAE,CAAE,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAE;SAC1C,CAAC;OACW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;ACzBU;AAEZ;AAG/B;IADA;QAEY,YAAO,GAAG,IAAI,4CAAO,EAAO,CAAC;IAazC,CAAC;IAXG,oCAAW,GAAX,UAAY,OAAY;QACpB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC;IAED,qCAAY,GAAZ;QACI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED,mCAAU,GAAV;QACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACvC,CAAC;IAbQ,cAAc;QAD1B,gEAAU,EAAE;OACA,cAAc,CAc1B;IAAD,qBAAC;CAAA;AAd0B;;;;;;;;;;;;;;;;;;;;;;;;;ACLgB;AAG3C;IAII;IAAgB,CAAC;IAEjB,iCAAQ,GAAR,UAAS,KAAK;QACV,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAED,iCAAQ,GAAR;QACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAZQ,cAAc;QAD1B,gEAAU,EAAE;;OACA,cAAc,CAc1B;IAAD,qBAAC;CAAA;AAd0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHgB;AACO;AAGA;AAKlD;IAGI,4BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAGzC,wCAAW,GAAX,UAAY,IAAS;QACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAiB,6DAAU,CAAC,OAAO,gBAAa,EAAE,IAAI,CAAC,CAAC;IACjF,CAAC;IARQ,kBAAkB;QAD9B,gEAAU,EAAE;yCAIiB,+DAAU;OAH3B,kBAAkB,CAS9B;IAAD,yBAAC;CAAA;AAT8B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTY;AACO;AAGA;AAGlD;IAGI,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,qCAAe,GAAf;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CACb,6DAAU,CAAC,OAAO,UAAO,CAAC,CAAC;IACtC,CAAC;IARQ,WAAW;QADvB,gEAAU,EAAE;yCAIiB,+DAAU;OAH3B,WAAW,CAUvB;IAAD,kBAAC;CAAA;AAVuB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPmB;AACmB;AAGZ;AAMlD;IAEI,4BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,oDAAuB,GAAvB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CACb,6DAAU,CAAC,OAAO,iBAAc,CAAC,CAAC;IAC7C,CAAC;IAED,2CAAc,GAAd,UAAe,WAA2B;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAiB,6DAAU,CAAC,OAAO,iBAAc,EAAE,WAAW,CAAC,CAAC;IACzF,CAAC;IAED,iDAAoB,GAApB,UAAqB,WAA2B;QAC5C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,6DAAU,CAAC,OAAO,iBAAc,EAAE,WAAW,CAAC,CAAC;IACxF,CAAC;IAED,+CAAkB,GAAlB,UAAmB,WAA2B;QAC1C,IAAM,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QACpC,UAAU,CAAC,GAAG,CAAC,cAAc,EAAG,aAAa,CAAC,CAAC;QAE/C,IAAM,OAAO,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;QAEvC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAiB,6DAAU,CAAC,OAAO,iBAAc,EAAE,OAAO,CAAC,CAAC;IACvF,CAAC;IAxBQ,kBAAkB;QAD9B,gEAAU,EAAE;yCAGiB,+DAAU;OAF3B,kBAAkB,CAyB9B;IAAD,yBAAC;CAAA;AAzB8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACV0B;AACP;AAEA;AAEC;AAInD;IAKE,sBAAoB,IAAgB,EAC1B,cAA8B;QADpB,SAAI,GAAJ,IAAI,CAAY;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QAJxC,kBAAa,GAA0B,IAAI,0DAAY,EAAE,CAAC;IAId,CAAC;IAE7C,mCAAY,GAAZ,UAAa,KAAiB;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAChB,6DAAU,CAAC,OAAO,WAAQ,EAC3B,KAAK,EAAE;YACP,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;SACrB,CACF,CAAC;IACJ,CAAC;IAED,sCAAe,GAAf,UAAgB,GAAG;QACjB,IAAM,IAAI,GAAc;YACtB,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK;YACrB,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,GAAG,CAAC,OAAO;SACrB,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,wCAAiB,GAAjB;QACE,IAAM,IAAI,GAAc;YACtB,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;SACZ,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IApCU,YAAY;QADxB,gEAAU,EAAE;yCAMe,+DAAU;YACV,+DAAc;OAN7B,YAAY,CAqCxB;IAAD,mBAAC;CAAA;AArCwB;;;;;;;;;;;;;;;;;;;;;;;ACTkB;AAEkB;AAG7D;IAAA;IAkBA,CAAC;IAhBG,qCAAY,GAAZ;QACI,IAAM,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,wEAAY,CAAC,SAAS,CAAC,CAAC;QACzD,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;YACd,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC;IACL,CAAC;IAED,qCAAY,GAAZ,UAAa,GAAc;QACvB,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;YACd,YAAY,CAAC,UAAU,CAAC,wEAAY,CAAC,SAAS,CAAC,CAAC;QACpD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,YAAY,CAAC,OAAO,CAAC,wEAAY,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QACtE,CAAC;IACL,CAAC;IAjBQ,cAAc;QAD1B,gEAAU,EAAE;OACA,cAAc,CAkB1B;IAAD,qBAAC;CAAA;AAlB0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLgB;AACO;AAGA;AAKlD;IAGI,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,4CAAmB,GAAnB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CACb,6DAAU,CAAC,OAAO,cAAW,CAAC,CAAC;IAC1C,CAAC;IAED,mCAAU,GAAV,UAAW,IAAgB;QACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAiB,6DAAU,CAAC,OAAO,cAAW,EAAE,IAAI,CAAC,CAAC;IAC/E,CAAC;IAED,yCAAgB,GAAhB,UAAiB,IAAgB;QAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,6DAAU,CAAC,OAAO,cAAW,EAAE,IAAI,CAAC,CAAC;IAC9E,CAAC;IAED,uCAAc,GAAd,UAAe,IAAgB;QAC3B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAiB,6DAAU,CAAC,OAAO,cAAW,CAAC,CAAC;IAC3E,CAAC;IApBQ,cAAc;QAD1B,gEAAU,EAAE;yCAIiB,+DAAU;OAH3B,cAAc,CAqB1B;IAAD,qBAAC;CAAA;AArB0B;;;;;;;;;;;;ACT3B,mB;;;;;;;;;;;ACAA,6jBAA6jB,OAAO,uCAAuC,WAAW,uCAAuC,YAAY,yK;;;;;;;;;;;;;;;;;;;;;;;;;ACAvnB;AACmB;AAQrE;IAME,iCAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAClD,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,8CAAY,GAAZ;QAAA,iBAIC;QAHC,IAAI,CAAC,cAAc,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,aAAG;YACrD,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kDAAgB,GAAhB,UAAiB,EAAE;QACjB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAClB,CAAC;IArBU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAOoC,gFAAc;OANvC,uBAAuB,CAuBnC;IAAD,8BAAC;CAAA;AAvBmC;;;;;;;;;;;;;ACTpC;AAAA;AAAO,IAAM,UAAU,GAAG;IACtB,OAAO,EAAE,wDAAwD;CACnE,CAAC;AACF,mEAAmE;;;;;;;;;;;;;ACHpE;AAAA;AAAO,IAAM,YAAY,GAAG;IACxB,SAAS,EAAE,WAAW;CACzB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACFyC;AAEF;AAGzC;IACI,mBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEtC,+BAAW,GAAX;QACI,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAVQ,SAAS;QADrB,gEAAU,EAAE;yCAEmB,sDAAM;OADzB,SAAS,CAWrB;IAAD,gBAAC;CAAA;AAXqB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLqB;AAE0B;AAEnB;AAGlD;IAEI,yBAAmB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;IAC1C,CAAC;IAED,mCAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QAE9C,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;QAE9C,IAAM,CAAC,GAAG,6DAAU,CAAC,OAAO,CAAC,MAAM,CAAC;QACpC,IAAM,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,6DAAU,CAAC,OAAO,CAAC;QAEpE,EAAE,CAAC,CAAC,SAAS,IAAI,YAAY,CAAC,CAAC,CAAC;YAC7B,IAAM,OAAO,GAAG,GAAG,CAAC,OAAO;iBAC1B,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;iBACtC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;iBACvC,GAAG,CAAC,eAAe,EAAG,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;YAGxD,IAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,OAAO,WAAE,CAAC,CAAC;YAExC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC7B,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC5B,CAAC;IACL,CAAC;IAzBQ,eAAe;QAD3B,gEAAU,EAAE;yCAGmB,gFAAc;OAFjC,eAAe,CA0B3B;IAAD,sBAAC;CAAA;AA1B2B;;;;;;;;;;;;;ACP5B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-blucake-navbar></app-blucake-navbar>\\r\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { IngredienteService } from './blucake-services/ingredientes.service';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\nimport { BlucakeRoutingModule } from './blucake-routing/blucake-routing.module';\r\nimport { BlucakeHomeComponent } from './blucake-home/blucake-home.component';\r\nimport { BlucakeLoginComponent } from './blucake-login/blucake-login.component';\r\nimport { BlucakeUsuarioComponent } from './blucake-usuario/blucake-usuario.component';\r\nimport { BlucakeNavbarComponent } from './blucake-navbar/blucake-navbar.component';\r\nimport { LoginService } from './blucake-services/login.service';\r\nimport { StorageService } from './blucake-services/storage.service';\r\nimport { AuthGuard } from './guard/auth.guard';\r\nimport { UsuarioService } from './blucake-services/usuario.service';\r\nimport { AuthInterceptor } from './interceptors.ts/auht.interceptors';\r\nimport { HomeService } from './blucake-services/home.service';\r\nimport { BlucakeReceitasComponent } from './blucake-receitas/blucake-receitas.component';\r\nimport { BlucakeIngredientesComponent } from './blucake-ingredientes/blucake-ingredientes.component';\r\n\r\nimport { BluCakeService } from './blucake-services/blucake.service';\r\nimport { BlucakeHomeDetalheComponent } from './blucake-home/blucake-home-detalhe/blucake-home-detalhe.component';\r\nimport { EnviarEmailService } from './blucake-services/enviar-email';\r\nimport { MessageService } from './blucake-services/MessageService';\r\nimport { BlucakeEnviarEmailComponent } from './blucake-enviar-email/blucake-enviar-email.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BlucakeHomeComponent,\r\n    BlucakeLoginComponent,\r\n    BlucakeUsuarioComponent,\r\n    BlucakeNavbarComponent,\r\n    BlucakeReceitasComponent,\r\n    BlucakeIngredientesComponent,\r\n    BlucakeHomeDetalheComponent,\r\n    BlucakeEnviarEmailComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    BlucakeRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    NgxPaginationModule\r\n      ],\r\n  providers: [LoginService,\r\n              StorageService,\r\n              UsuarioService,\r\n              AuthGuard,\r\n              { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n              HomeService,\r\n              IngredienteService,\r\n              BluCakeService,\r\n              EnviarEmailService,\r\n              MessageService\r\n            ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"modal-contato-confeiteiro\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n        <h4 class=\\\"modal-title\\\"><i class=\\\"fa fa-user\\\"></i> Entre em contato com: {{nomeConfeiteiro}}</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n \\n        <form [formGroup]=\\\"formulario\\\"> \\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"txtContatoNome\\\">Nome <i class=\\\"fa fa-user\\\"></i></label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"txtContatoNome\\\" placeholder=\\\"Seu nome\\\" formControlName=\\\"nome\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"txtContatoEmail\\\">E-mail <i class=\\\"fa fa-envelope\\\"></i></label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"txtContatoEmail\\\" placeholder=\\\"seuemail@exemplo.com\\\" formControlName=\\\"email\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"txtContatoTelefone\\\">Telefone <i class=\\\"fa fa-phone\\\"></i></label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"txtContatoTelefone\\\" placeholder=\\\"(99) 99999-9999\\\" formControlName=\\\"telefone\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"txtContatoMensagem\\\">Mensagem</label>\\n            <textarea id=\\\"txtContatoMensagem\\\" class=\\\"form-control\\\" rows=\\\"3\\\" formControlName=\\\"textArea\\\"></textarea>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Fechar</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)= \\\"onSubmitEnviarEmailInter()\\\">Enviar <i class=\\\"fa fa-paper-plane\\\" ></i></button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import { EnviarEmailDTO } from './../blucake-models/enviarEmailDTO';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { EnviarEmailService } from '../blucake-services/enviar-email';\nimport { MessageService } from '../blucake-services/MessageService';\nimport { BluCakeService } from '../blucake-services/blucake.service';\n\n@Component({\n  selector: 'app-blucake-enviar-email',\n  templateUrl: './blucake-enviar-email.component.html',\n  styleUrls: ['./blucake-enviar-email.component.css']\n})\nexport class BlucakeEnviarEmailComponent implements OnInit {\n\n  formulario: FormGroup;\n\n  receitaSelecionada;\n  nomeConfeiteiro;\n\n  constructor(private formBuilder: FormBuilder,\n    private enviarEmailService: EnviarEmailService,\n    private bluCakeService: BluCakeService,\n    private messageService: MessageService) { }\n\n  ngOnInit() {\n    this.messageService.getMessage().subscribe(ret => {\n      this.receitaSelecionada = ret;\n      this.nomeConfeiteiro = ret.usuario.nome;\n    });\n\n    this.formulario = this.formBuilder.group({\n      email: [null],\n      telefone: [null],\n      textArea: [null],\n      nome: [null]\n    });\n  }\n\n  onSubmitEnviarEmailInter() {\n    const enviarEmailDTO = {\n      destEmail: this.receitaSelecionada.usuario.email,\n      destNome:  this.receitaSelecionada.usuario.nome,\n      idUsuario: this.receitaSelecionada.usuario.id,\n      remetEmail: this.formulario.value.email,\n      remetNome: this.formulario.value.nome,\n      tipoEnvio: 2,\n      idReceita: this.receitaSelecionada.id,\n      nomeReceita: this.receitaSelecionada.nome,\n      telefone: this.formulario.value.telefone,\n      assunto: '',\n      mensagem: this.formulario.value.textArea\n    };\n\n    this.enviarEmailService.EnviarEmail(enviarEmailDTO).subscribe(ret => {\n      debugger\n      if (ret.data) {\n        alert('Email enviado com sucesso');\n      }\n    });\n  }\n}\n","module.exports = \"div[class^='col-'] img {\\r\\n    max-width: 100%;\\r\\n    margin-bottom: 5px;\\r\\n  }\\r\\n\\r\\n  .modal .panel-heading {\\r\\n    padding: 3px 5px;\\r\\n  }\\r\\n\\r\\n  \"","module.exports = \"<!-- /.modal -->\\n<div class=\\\"modal fade\\\" id=\\\"modal-detalhes-1\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">×</span>\\n        </button>\\n        <h4 class=\\\"modal-title\\\">\\n          {{boloClicado.nome}}          \\n        </h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"row\\\">\\n\\n          <div class=\\\"col-md-6 col-md-push-6 col-xs-12 col-xs-push-0\\\">\\n            <div>\\n                <img src={{boloClicado.imagem}} >\\n                <p>\\n                    {{boloClicado.descricao}}\\n                </p>\\n            </div>\\n            \\n\\n            <div class=\\\"panel panel-primary\\\">\\n              <div class=\\\"panel-heading\\\">\\n                <i class=\\\"fa fa-user\\\"></i>\\n                Confeiteiro\\n              </div>\\n              <div class=\\\"panel-body\\\">\\n                <ul style=\\\"list-style: none; padding: 0;\\\">\\n                  <li>\\n                    <i class=\\\"fa fa-phone\\\"></i> {{usuario.telefoneFixo}}</li>\\n                  <li>\\n                    <i class=\\\"fa fa-envelope\\\"></i> {{usuario.email}}</li>\\n                </ul>\\n\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"col-md-6 col-md-pull-6 col-xs-12 col-xs-pull-0\\\">\\n\\n            <div class=\\\"panel panel-primary\\\">\\n              <div class=\\\"panel-heading\\\">\\n                <h3 class=\\\"panel-title\\\"><i class=\\\"fa fa-seedling\\\"></i> Ingredientes</h3>\\n              </div>\\n              <div class=\\\"panel-body\\\">\\n\\n                <ul>\\n                  <ng-template ngFor let-ing [ngForOf]=\\\"boloClicado.ingredienteReceitas\\\">\\n                    <li>{{ing.nome}}</li>\\n                  </ng-template>\\n                </ul>\\n\\n              </div>\\n            </div>\\n            <ul class=\\\"list-group\\\">\\n                <li class=\\\"list-group-item\\\">\\n                  <i class=\\\"fa fa-check text-success\\\"></i> Sem glúten</li>\\n                <li class=\\\"list-group-item\\\">\\n                  <i class=\\\"fa fa-check text-success\\\"></i> Sem lactose</li>\\n              </ul>\\n          </div>\\n\\n          <div class=\\\"col-xs-12 col-md-3\\\">\\n\\n          </div>\\n\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <span class=\\\"label label-success pull-left\\\" style=\\\"margin-right: 10px; font-size: 30px\\\">{{boloClicado.preco | currency:'BRL':true:'1.2-2' }}</span>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Fechar</button>        \\n      </div>\\n    </div>\\n    <!-- /.modal-content -->\\n  </div>\\n  <!-- /.modal-dialog -->\\n</div>\\n<!-- /.modal -->\"","import { Component, OnInit, AfterViewInit, Input, EventEmitter, Output } from '@angular/core';\nimport { BluCakeService } from 'src/app/blucake-services/blucake.service';\nimport { MessageService } from 'src/app/blucake-services/MessageService';\n\n@Component({\n  selector: 'app-blucake-home-detalhe',\n  templateUrl: './blucake-home-detalhe.component.html',\n  styleUrls: ['./blucake-home-detalhe.component.css']\n})\nexport class BlucakeHomeDetalheComponent implements OnInit {\n\n  boloClicado = {};\n  usuario = {};\n\n  constructor(private bluCakeService: BluCakeService,\n              private messageService: MessageService) { }\n\n  ngOnInit() {\n    this.messageService.getMessage().subscribe(ret => {\n      this.boloClicado = ret;\n      this.usuario = ret.usuario;\n    });\n  }\n\n\n}\n","module.exports = \".caption>h3 {\\r\\n    margin: 0;\\r\\n  }\\r\\n\\r\\n  #listagem-de-bolos>.col-xs-12 {\\r\\n    padding: 0;\\r\\n  }\\r\\n\\r\\n  .thumbnail>div:first-child {\\r\\n    position: relative;\\r\\n  }\\r\\n\\r\\n  .icones-classificacao {\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    padding: 5px;\\r\\n  }\\r\\n\\r\\n  .icones-classificacao span.label {\\r\\n    float: right;\\r\\n    margin-left: 3px;\\r\\n  }\\r\\n\\r\\n  div[class^='col-'] img {\\r\\n    max-width: 100%;\\r\\n    margin-bottom: 5px;\\r\\n  }\\r\\n\\r\\n  textarea {\\r\\n    resize: vertical;\\r\\n    min-height: 100px;\\r\\n    max-height: 500px;\\r\\n  }\\r\\n\\r\\n\"","module.exports = \"<div id=\\\"corpo\\\" class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"alert alert-danger col-xs-12\\\">\\r\\n      AQUI TEM ALGUM CONTEÚDO LEGAL, SÓ NÃO TENHO ELE AINDA.\\r\\n      <br>\\r\\n      <br>\\r\\n      <br>\\r\\n      <br>\\r\\n      <br>\\r\\n      <br>\\r\\n      <br>\\r\\n      <br>\\r\\n      <br>\\r\\n      <br>\\r\\n      <br>\\r\\n      <br>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-xs-12 col-md-2\\\">\\r\\n      <!-- <form> -->\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 col-sm-3 form-group\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"txtBuscaGeral\\\" placeholder=\\\"Busca\\\"\\r\\n            (input)=\\\"filtroDigital($event.currentTarget.value)\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 col-sm-3 form-group\\\">\\r\\n\\r\\n\\r\\n          <select id=\\\"select-multiplo\\\" class=\\\"selectpicker form-control\\\" multiple=\\\"multiple\\\"\\r\\n            title=\\\"Classificação do Bolo\\\">\\r\\n            <option>Diet</option>\\r\\n            <option>Light</option>\\r\\n            <option>Vegetariana</option>\\r\\n            <option>Vegana</option>\\r\\n            <option>Sem Glúten</option>\\r\\n            <option>Sem Lactose</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- </form> -->\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-12 col-md-10\\\">\\r\\n      <ng-template ngFor let-rec [ngForOf]=\\\"records\\\">\\r\\n        <div class=\\\"col-xs-12 col-sm-6 col-md-3\\\">\\r\\n          <div class=\\\"thumbnail\\\">\\r\\n            <div>\\r\\n              <img src={{rec.imagem}}>\\r\\n              <div class=\\\"icones-classificacao\\\">\\r\\n                <span class=\\\"label label-success label-lg\\\" title=\\\"Vegano\\\"><i class=\\\"fa fa-leaf\\\"></i></span>\\r\\n                <span class=\\\"label label-warning label-lg\\\" title=\\\"Sem Glutén\\\"><i class=\\\"fa fa-seedling\\\"></i></span>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"caption\\\">\\r\\n              <h3>{{rec.nome}}</h3>\\r\\n              <span class=\\\"lead label label-success\\\">{{rec.preco | currency:'BRL':true:'1.2-2'}}</span>\\r\\n              <br>\\r\\n              <br>\\r\\n              <div class=\\\"text-center\\\">\\r\\n                <div>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-default no-border\\\" (click)=\\\"boloSelecionado(rec)\\\" data-toggle=\\\"modal\\\"\\r\\n                    data-target=\\\"#modal-detalhes-1\\\" role=\\\"button\\\"><i class=\\\"fa fa-list\\\"></i>Detalhes</button>\\r\\n\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default no-border\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modal-contato-confeiteiro\\\"\\r\\n                    role=\\\"button\\\" (click)=\\\"boloSelecionado(rec)\\\">\\r\\n                    Contato\\r\\n                    <i class=\\\"fa fa-envelope\\\"></i>\\r\\n                  </button>\\r\\n                 \\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </ng-template>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-blucake-home-detalhe></app-blucake-home-detalhe>\\r\\n\\r\\n<app-blucake-enviar-email></app-blucake-enviar-email>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { HomeService } from '../blucake-services/home.service';\r\nimport { BluCakeService } from '../blucake-services/blucake.service';\r\nimport { MessageService } from '../blucake-services/MessageService';\r\n\r\n@Component({\r\n  selector: 'app-blucake-home',\r\n  templateUrl: './blucake-home.component.html',\r\n  styleUrls: ['./blucake-home.component.css']\r\n})\r\nexport class BlucakeHomeComponent implements OnInit {\r\n\r\n  records;\r\n\r\n  stringFiltro;\r\n\r\n  constructor(private homeService: HomeService,\r\n              private bluCakeService: BluCakeService,\r\n              private messageService: MessageService) { }\r\n\r\n  ngOnInit() {\r\n    this.ativarTabela();\r\n  }\r\n\r\n  ativarTabela() {\r\n    this.homeService.buscarTodosHome().subscribe(res => {\r\n      this.records = res.data;\r\n      if (this.stringFiltro) {\r\n        this.records = this.records.filter(items => items.nome.includes(this.stringFiltro));\r\n      }\r\n    });\r\n  }\r\n\r\n  boloSelecionado(rec) {\r\n    this.messageService.sendMessage(rec);\r\n    this.bluCakeService.setValue(rec);\r\n  }\r\n\r\n  filtroDigital(str: String) {\r\n    this.stringFiltro = str;\r\n       this.ativarTabela();\r\n  }\r\n}\r\n","module.exports = \"#table-lista-ingredientes td:last-child {\\r\\n    width: 30px;\\r\\n  }\\r\\n\\r\\n\\r\\n.my-pagination /deep/ .ngx-pagination .current { \\r\\n  -webkit-padding-start:0px; \\r\\n          padding-inline-start:0px;\\r\\n}\"","module.exports = \"<div id=\\\"corpo\\\" class=\\\"container\\\">\\n  <div class=\\\"page-header\\\">\\n    <h1>Cadastro de Ingredientes</h1>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-xs-12\\\">\\n      <div class=\\\"well alert alert-primary\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-hidden=\\\"true\\\">×</button>\\n        <p>Você deve cadastrar os ingredientes aqui para utilizar posteriormente no\\n          <a href=\\\"receitas.html\\\" target=\\\"_blank\\\">cadastro de receitas</a>.\\n        </p>\\n      </div>\\n    </div>\\n    <div class=\\\"col-xs-12 col-md-4\\\">\\n      <form [formGroup]=\\\"formularioIngrediente\\\">\\n        <div class=\\\"input-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"txtAdicionaIngrediente\\\" placeholder=\\\"Novo Ingrediente\\\"\\n            formControlName=\\\"nome\\\">\\n          \\n          <span class=\\\"input-group-btn\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)='salvar()'><i class=\\\"fa fa-plus\\\"></i></button>\\n          </span>\\n        </div>\\n      </form>\\n      <br><br>\\n    </div>\\n\\n\\n    <div class=\\\"col-xs-12\\\">\\n      <table id=\\\"table-lista-ingredientes\\\" class=\\\"table table-condensed table-responsive\\\">\\n        <thead>\\n          <tr>\\n            <th>Ingrediente</th>\\n            <th>Ações</th>\\n          </tr>\\n        </thead>\\n        <tr *ngFor=\\\"let rec of records | paginate: { itemsPerPage: 5, currentPage: paginaAtual };\\\">\\n          <td>{{rec.nome}}</td>\\n          <td>\\n            <button class=\\\"btn btn-default no-border\\\"  (click)=\\\"removerIngredientes(rec)\\\"><i class=\\\"fa fa-trash\\\"></i></button>\\n          </td>\\n        </tr>\\n      </table>\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-4\\\">             \\n            </div>\\n          <div class=\\\"col-xs-4\\\">\\n             <pagination-controls class=\\\"my-pagination\\\" (pageChange)=\\\"paginaAtual = $event\\\" responsive=\\\"true\\\"></pagination-controls>\\n           </div>\\n           <div class=\\\"col-xs-4\\\">             \\n            </div>\\n      </div>\\n    </div>\\n  </div>\\n  <br><br>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { IngredienteService } from '../blucake-services/ingredientes.service';\nimport { Router } from '@angular/router';\nimport { BluCakeService } from '../blucake-services/blucake.service';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { IngredienteDTO } from '../blucake-models/ingredienteDTO';\nimport { StorageService } from '../blucake-services/storage.service';\n\n\n\n@Component({\n  selector: 'app-blucake-ingredientes',\n  templateUrl: './blucake-ingredientes.component.html',\n  styleUrls: ['./blucake-ingredientes.component.css']\n})\nexport class BlucakeIngredientesComponent implements OnInit {\n\n  formularioIngrediente: FormGroup;\n\n  records;\n\n  public paginaAtual = 1;\n\n\n  constructor(private ingredienteService: IngredienteService,\n    private router: Router,\n    private bluCakeService: BluCakeService,\n    private formBuilder: FormBuilder,\n    private storageService: StorageService) { }\n\n  ngOnInit() {\n    this.ativarIngredientes();\n    this.formularioIngrediente = this.formBuilder.group({\n      id: [null],\n      nome: [null],\n      usuarioId: [null]\n    });\n  }\n\n  ativarIngredientes() {\n    this.ingredienteService.buscarTodosIngredientes().subscribe(ret => {\n      this.records = ret.data;\n    });\n  }\n\n  salvar() {\n    const ingredienteDTO: IngredienteDTO = {\n      id: this.formularioIngrediente.value.id || null,\n      nome: this.formularioIngrediente.value.nome,\n      usuarioId: this.storageService.getLocalUser().usuario.id,\n      dataCadastro: null\n    };\n    this.ingredienteService.addIngrediente(ingredienteDTO).subscribe(ret => {\n     this.ativarIngredientes();\n    });\n  }\n\n  removerIngredientes(rec) {\n    const ingredienteDTO: IngredienteDTO = {\n      id: rec.id,\n      nome: rec.nome,\n      usuarioId: rec.usuario.id,\n      dataCadastro: null\n    };\n    this.ingredienteService.deletarIngrediente(ingredienteDTO).subscribe(ret => {\n      debugger\n    });\n  }\n\n  configDataTable() {\n    // $(document).ready(function () {\n    //     $('#table-lista-ingredientes').DataTable({\n    //       language: {\n    //         'sEmptyTable': 'Nenhum registro encontrado',\n    //         'sInfo': 'Mostrando de _START_ até _END_ de _TOTAL_ registros', 'sInfoEmpty': 'Mostrando 0 até 0 de 0 registros',\n    //         'sInfoFiltered': '(Filtrados de _MAX_ registros)', 'sInfoPostFix': '',\n    //         'sInfoThousands': '.', 'sLengthMenu': '_MENU_ resultados por página',\n    //         'sLoadingRecords': 'Carregando...', 'sProcessing': 'Processando...',\n    //         'sZeroRecords': 'Nenhum registro encontrado', 'sSearch': 'Pesquisar',\n    //         'oPaginate': {\n    //           'sNext': 'Próximo', 'sPrevious': 'Anterior',\n    //           'sFirst': 'Primeiro', 'sLast': 'Último'\n    //         },\n    //         'oAria': {\n    //           'sSortAscending': ': Ordenar colunas de forma ascendente',\n    //           'sSortDescending': ': Ordenar colunas de forma descendente'\n    //         }\n    //       }\n    //     });\n    //   });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal fade bs-example-modal-sm\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mySmallModalLabel\\\">\\r\\n    <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form form [formGroup]=\\\"formulario\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n                <div class=\\\"modal-body\\\">\\r\\n\\r\\n                    <div>\\r\\n                        <!-- Nav tabs -->\\r\\n                        <ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\r\\n                            <li role=\\\"presentation\\\" class=\\\"active\\\">\\r\\n                                <a href=\\\"#login\\\" aria-controls=\\\"login\\\" role=\\\"tab\\\" data-toggle=\\\"tab\\\">Entrar</a>\\r\\n                            </li>\\r\\n                            <li role=\\\"presentation\\\">\\r\\n                                <a href=\\\"#register\\\" aria-controls=\\\"register\\\" role=\\\"tab\\\"\\r\\n                                    data-toggle=\\\"tab\\\">Registrar-se</a>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n\\r\\n                        <!-- Tab panes -->\\r\\n                        <div class=\\\"tab-content\\\">\\r\\n                            <div role=\\\"tabpanel\\\" class=\\\"tab-pane active\\\" id=\\\"login\\\">\\r\\n\\r\\n                                <div style=\\\"padding: 10px; padding-top: 20px;\\\">\\r\\n                                    <p>Entrar com e-mail e senha</p>\\r\\n                                    <form [formGroup]=\\\"formulario\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"txtLogin\\\" class=\\\"control-label\\\"><i class=\\\"fa fa-envelope\\\"></i>\\r\\n                                                E-mail</label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"txtLogin\\\" required=\\\"required\\\"\\r\\n                                                placeholder=\\\"confeiteiro@exemplo.com\\\" formControlName=\\\"email\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"txtSenha\\\" class=\\\"control-label\\\"><i class=\\\"fa fa-key\\\"></i>\\r\\n                                                Senha</label>\\r\\n                                            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"txtSenha\\\"\\r\\n                                                formControlName=\\\"senha\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <a href=\\\"#\\\">Esqueci minha senha</a>\\r\\n                                        </div>\\r\\n                                    </form>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"modal-footer\\\">\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Cancelar</button>\\r\\n                                    <button class=\\\"btn btn-primary\\\"  data-dismiss=\\\"modal\\\"\\r\\n                                        (click)='onSubmit()'>Enviar <i class=\\\"fa fa-paper-plane\\\"></i></button>\\r\\n                                </div>\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                            <div role=\\\"tabpanel\\\" class=\\\"tab-pane\\\" id=\\\"register\\\">\\r\\n\\r\\n                                <div style=\\\"padding: 10px; padding-top: 20px;\\\">\\r\\n                                    <p>Solicite sua conta e seja um confeiteiro BluCake!</p>\\r\\n                                    <form  [formGroup]=\\\"formularioRegistro\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"txtSenha\\\" class=\\\"control-label\\\"><i class=\\\"fa fa-user\\\"></i>\\r\\n                                                Nome</label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"txtSenha\\\" required=\\\"required\\\"\\r\\n                                                formControlName=\\\"remetNome\\\">\\r\\n                                        </div>\\r\\n\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"txtEmail\\\" class=\\\"control-label\\\"><i class=\\\"fa fa-envelope\\\"></i>\\r\\n                                                E-mail</label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"txtEmail\\\" required=\\\"required\\\"\\r\\n                                                placeholder=\\\"seuemail@exemplo.com\\\" formControlName=\\\"remetEmail\\\">\\r\\n                                        </div>\\r\\n                                    </form>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"modal-footer\\\">\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Cancelar</button>\\r\\n                                    <button class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\"\\r\\n                                        (click)='onSubmitRegistro()'>Enviarr <i class=\\\"fa fa-paper-plane\\\"></i></button>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n                <!-- <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Cancelar</button>\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" data-dismiss=\\\"modal\\\" (click)='onSubmit()'>Enviar <i\\r\\n                            class=\\\"fa fa-paper-plane\\\"></i></button>\\r\\n                </div> -->\\r\\n            </form>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from '../blucake-services/login.service';\r\nimport { UsuarioDTO } from '../blucake-models/usuarioDTO';\r\nimport { EnviarEmailService } from '../blucake-services/enviar-email';\r\n\r\n@Component({\r\n  selector: 'app-blucake-login',\r\n  templateUrl: './blucake-login.component.html',\r\n  styleUrls: ['./blucake-login.component.css']\r\n})\r\nexport class BlucakeLoginComponent implements OnInit {\r\n\r\n  @Input() logarDeslogar: boolean;\r\n\r\n  formulario: FormGroup;\r\n  formularioRegistro: FormGroup;\r\n\r\n  creds: UsuarioDTO = {\r\n    id: '',\r\n    nome: '',\r\n    email: '',\r\n    perfil: '',\r\n    senha: '',\r\n    dsPerfil: '',\r\n    nomeContato: '',\r\n    telefone1: '',\r\n    telefone2: '',\r\n    telefoneFixo: '',\r\n    rg: '',\r\n    cpf: '',\r\n    rua: '',\r\n    numero: '',\r\n    complemento: '',\r\n    bairro: '',\r\n    cidade: '',\r\n    estado: '',\r\n    cep: '',\r\n    dataContrato: ''\r\n  };\r\n\r\n  constructor(private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private loginServie: LoginService,\r\n    private enviarEmailService: EnviarEmailService) { }\r\n\r\n  ngOnInit() {\r\n    this.formulario = this.formBuilder.group({\r\n      email: [null],\r\n      senha: [null]\r\n    });\r\n\r\n    this.formularioRegistro = this.formBuilder.group({\r\n      remetNome: [null],\r\n      remetEmail: [null]\r\n    });\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    this.creds.email = this.formulario.value.email;\r\n    this.creds.senha = this.formulario.value.senha;\r\n\r\n    this.loginServie.authenticate(this.creds).subscribe(response => {\r\n      const aux = JSON.parse(response.body);\r\n      this.loginServie.successfulLogin(aux);\r\n    }, error => {\r\n      this.loginServie.noSuccessfulLogin();\r\n      this.showError();\r\n      console.log(error);\r\n    });\r\n    console.log(this.logarDeslogar);\r\n  }\r\n\r\n  onSubmitRegistro() {\r\n    const userEmail = {\r\n      remetNome: this.formularioRegistro.value.remetNome,\r\n      remetEmail: this.formularioRegistro.value.remetEmail,\r\n      tipoEnvio: 1\r\n    };\r\n\r\n    this.enviarEmailService.EnviarEmail(userEmail).subscribe(ret => {\r\n      if (ret.data) {\r\n        alert('Email enviado com sucesso');\r\n      }\r\n    });\r\n  }\r\n\r\n  showError() {\r\n    alert('sdfvjsdgfjgsdhfhds');\r\n  }\r\n\r\n  deslogar() {\r\n    this.loginServie.noSuccessfulLogin();\r\n    this.router.navigate(['/home']);\r\n  }\r\n}\r\n","module.exports = \".navtt{\\r\\n    background-color:  #e3f2fd;;\\r\\n}\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\" style=\\\"margin: 0px\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <!-- Brand and toggle get grouped for better mobile display -->\\r\\n    <div class=\\\"navbar-header\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapse-navbar\\\"\\r\\n        aria-expanded=\\\"false\\\">\\r\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n      </button>\\r\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/home\\\">\\r\\n        <i class=\\\"fa fa-birthday-cake\\\"></i>\\r\\n        <b>BluCake</b>\\r\\n      </a>\\r\\n    </div>\\r\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"collapse-navbar\\\">\\r\\n      <ul class=\\\"nav navbar-nav\\\">\\r\\n        <li class=\\\"active\\\">\\r\\n          <a routerLink=\\\"/usuario\\\" *ngIf=\\\"mostrarMenu\\\">Usuario</a>\\r\\n        </li>\\r\\n        <li class=\\\"active\\\">\\r\\n          <a routerLink=\\\"/receitas\\\" *ngIf=\\\"mostrarMenu\\\">Receitas</a>\\r\\n        </li>\\r\\n        <li class=\\\"active\\\">\\r\\n          <a routerLink=\\\"/ingredientes\\\" *ngIf=\\\"mostrarMenu\\\">Ingredientes</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n        <li>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"margin: 5px\\\" data-toggle=\\\"modal\\\"\\r\\n            data-target=\\\".bs-example-modal-sm\\\" *ngIf=\\\"!mostrarMenu\\\">Login</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"margin: 5px\\\" (click)='deslogar()'\\r\\n            *ngIf=\\\"mostrarMenu\\\">Sair</button>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n\\r\\n    <!-- /.navbar-collapse -->\\r\\n  </div>\\r\\n  <!-- /.container-fluid -->\\r\\n</nav>\\r\\n\\r\\n\\r\\n<app-blucake-login></app-blucake-login>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../blucake-services/login.service';\r\nimport { StorageService } from '../blucake-services/storage.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-blucake-navbar',\r\n  templateUrl: './blucake-navbar.component.html',\r\n  styleUrls: ['./blucake-navbar.component.css']\r\n})\r\nexport class BlucakeNavbarComponent implements OnInit {\r\n\r\n  mostrarMenu: boolean;\r\n\r\n  constructor(private loginServie: LoginService,\r\n              private storageService: StorageService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.storageService.getLocalUser()) {\r\n      this.mostrarMenu = true;\r\n    }\r\n\r\n\r\n    this.loginServie.usuarioLogado.subscribe(retorno => {\r\n      this.mostrarMenu = retorno;\r\n    });\r\n  }\r\n\r\n  deslogar() {\r\n    this.loginServie.noSuccessfulLogin();\r\n    this.router.navigate(['/home']);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  blucake-receitas works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-blucake-receitas',\n  templateUrl: './blucake-receitas.component.html',\n  styleUrls: ['./blucake-receitas.component.css']\n})\nexport class BlucakeReceitasComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BlucakeHomeComponent } from '../blucake-home/blucake-home.component';\r\nimport { BlucakeUsuarioComponent } from '../blucake-usuario/blucake-usuario.component';\r\nimport { AuthGuard } from '../guard/auth.guard';\r\nimport { BlucakeReceitasComponent } from '../blucake-receitas/blucake-receitas.component';\r\nimport { BlucakeIngredientesComponent } from '../blucake-ingredientes/blucake-ingredientes.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'home', component: BlucakeHomeComponent},\r\n  {path: 'usuario', component: BlucakeUsuarioComponent, canActivate: [AuthGuard]},\r\n  {path: 'receitas', component: BlucakeReceitasComponent, canActivate: [AuthGuard]},\r\n  {path: 'ingredientes', component: BlucakeIngredientesComponent, canActivate: [AuthGuard]}, \r\n  {path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  {path: '**', redirectTo: '/home'}\r\n];\r\n\r\n\r\n\r\n@NgModule({\r\n  exports: [ RouterModule ],\r\n  imports: [ RouterModule.forRoot(routes) ]\r\n})\r\nexport class BlucakeRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class MessageService {\r\n    private subject = new Subject<any>();\r\n\r\n    sendMessage(message: any) {\r\n        this.subject.next(message);\r\n    }\r\n\r\n    clearMessage() {\r\n        this.subject.next();\r\n    }\r\n\r\n    getMessage(): Observable<any> {\r\n        return this.subject.asObservable();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class BluCakeService {\r\n\r\n    private value;\r\n\r\n    constructor() { }\r\n\r\n    setValue(value) {\r\n        this.value = value;\r\n    }\r\n\r\n    getValue() {\r\n        return this.value;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ResponseDTO } from '../blucake-models/responseDTO';\r\nimport { API_CONFIG } from '../config/api.config';\r\nimport { UsuarioDTO } from '../blucake-models/usuarioDTO';\r\n\r\n\r\n@Injectable()\r\nexport class EnviarEmailService {\r\n\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n\r\n    EnviarEmail(user: any): Observable<ResponseDTO> {\r\n        return this.http.post<ResponseDTO>(`${API_CONFIG.baseUrl}/enviaEmail`, user);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ResponseDTO } from '../blucake-models/responseDTO';\r\nimport { API_CONFIG } from '../config/api.config';\r\n\r\n@Injectable()\r\nexport class HomeService {\r\n\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    buscarTodosHome(): Observable<ResponseDTO> {\r\n        return this.http.get<ResponseDTO>(\r\n            `${API_CONFIG.baseUrl}/home`);\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ResponseDTO } from '../blucake-models/responseDTO';\r\nimport { API_CONFIG } from '../config/api.config';\r\nimport { UsuarioDTO } from '../blucake-models/usuarioDTO';\r\nimport { IngredienteDTO } from '../blucake-models/ingredienteDTO';\r\n\r\n\r\n@Injectable()\r\nexport class IngredienteService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    buscarTodosIngredientes(): Observable<ResponseDTO> {\r\n        return this.http.get<ResponseDTO>(\r\n            `${API_CONFIG.baseUrl}/ingrediente`);\r\n    }\r\n\r\n    addIngrediente(ingrediente: IngredienteDTO): Observable<ResponseDTO> {\r\n        return this.http.post<ResponseDTO>(`${API_CONFIG.baseUrl}/ingrediente`, ingrediente);\r\n    }\r\n\r\n    atualizarIngrediente(ingrediente: IngredienteDTO): Observable<ResponseDTO> {\r\n        return this.http.put<ResponseDTO>(`${API_CONFIG.baseUrl}/ingrediente`, ingrediente);\r\n    }\r\n\r\n    deletarIngrediente(ingrediente: IngredienteDTO): Observable<ResponseDTO> {\r\n        const httpParams = new HttpParams();\r\n        httpParams.set('ingredientes',  'ingrediente');\r\n\r\n        const options = { params: httpParams };\r\n\r\n        return this.http.delete<ResponseDTO>(`${API_CONFIG.baseUrl}/ingrediente`, options);\r\n    }\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UsuarioDTO } from '../blucake-models/usuarioDTO';\r\nimport { API_CONFIG } from '../config/api.config';\r\nimport { LocalUser } from '../blucake-models/localUser';\r\nimport { StorageService } from './storage.service';\r\n\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n\r\n  usuarioLogado: EventEmitter<Boolean> = new EventEmitter();\r\n\r\n\r\n  constructor(private http: HttpClient,\r\n    private storageService: StorageService) { }\r\n\r\n  authenticate(creds: UsuarioDTO) {\r\n    return this.http.post(\r\n      `${API_CONFIG.baseUrl}/login`,\r\n        creds, {\r\n        observe: 'response',\r\n        responseType: 'text'\r\n      }\r\n    );\r\n  }\r\n\r\n  successfulLogin(ret) {\r\n    const user: LocalUser = {\r\n      token: ret.data.token,\r\n      email: '',\r\n      usuario: ret.usuario\r\n    };\r\n    this.storageService.setLocalUser(user);\r\n    this.usuarioLogado.emit(true);\r\n  }\r\n\r\n  noSuccessfulLogin() {\r\n    const user: LocalUser = {\r\n      token: '',\r\n      email: '',\r\n      usuario: ''\r\n    };\r\n    this.storageService.setLocalUser(null);\r\n    this.usuarioLogado.emit(false);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LocalUser } from '../blucake-models/localUser';\r\nimport { STORAGE_KEYS } from '../config/storage_keys.config';\r\n\r\n@Injectable()\r\nexport class StorageService {\r\n\r\n    getLocalUser(): LocalUser {\r\n        const usr = localStorage.getItem(STORAGE_KEYS.localUser);\r\n        if (usr == null) {\r\n            return null;\r\n        } else {\r\n            return JSON.parse(usr);\r\n        }\r\n    }\r\n\r\n    setLocalUser(obj: LocalUser) {\r\n        if (obj == null) {\r\n            localStorage.removeItem(STORAGE_KEYS.localUser);\r\n        } else {\r\n            localStorage.setItem(STORAGE_KEYS.localUser, JSON.stringify(obj));\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ResponseDTO } from '../blucake-models/responseDTO';\r\nimport { API_CONFIG } from '../config/api.config';\r\nimport { UsuarioDTO } from '../blucake-models/usuarioDTO';\r\n\r\n\r\n@Injectable()\r\nexport class UsuarioService {\r\n\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    buscarTodosUsuarios(): Observable<ResponseDTO> {\r\n        return this.http.get<ResponseDTO>(\r\n            `${API_CONFIG.baseUrl}/usuarios`);\r\n    }\r\n\r\n    addUsuario(user: UsuarioDTO): Observable<ResponseDTO> {\r\n        return this.http.post<ResponseDTO>(`${API_CONFIG.baseUrl}/usuarios`, user);\r\n    }\r\n\r\n    atualizarUsuario(user: UsuarioDTO): Observable<ResponseDTO> {\r\n        return this.http.put<ResponseDTO>(`${API_CONFIG.baseUrl}/usuarios`, user);\r\n    }\r\n\r\n    deletarUsuario(user: UsuarioDTO): Observable<ResponseDTO> {\r\n        return this.http.delete<ResponseDTO>(`${API_CONFIG.baseUrl}/usuarios`);\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\">#</th>\\r\\n                    <th scope=\\\"col\\\">Nome</th>\\r\\n                    <th scope=\\\"col\\\">Email</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n    \\r\\n            <tbody>\\r\\n                <ng-template ngFor let-xb [ngForOf]=\\\"records\\\">\\r\\n                    <tr (click)=\\\"linhaSelecionada(xb)\\\">\\r\\n                        <td scope=\\\"row\\\">{{xb.id}}</td>\\r\\n                        <td>{{ xb.nome }}</td>\\r\\n                        <td>{{ xb.email }}</td>                    \\r\\n                    </tr>\\r\\n                </ng-template>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UsuarioService } from '../blucake-services/usuario.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-blucake-usuario',\r\n  templateUrl: './blucake-usuario.component.html',\r\n  styleUrls: ['./blucake-usuario.component.css']\r\n})\r\nexport class BlucakeUsuarioComponent implements OnInit {\r\n\r\n\r\n  records;\r\n\r\n\r\n  constructor(private usuarioService: UsuarioService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ativarTabela();\r\n  }\r\n\r\n  ativarTabela() {\r\n    this.usuarioService.buscarTodosUsuarios().subscribe(res => {\r\n      this.records = res.data;\r\n    });\r\n  }\r\n\r\n  linhaSelecionada(xb) {\r\n    console.log(xb);\r\n  }\r\n\r\n}\r\n","export const API_CONFIG = {\r\n    baseUrl: 'ec2-18-231-84-174.sa-east-1.compute.amazonaws.com:8080'\r\n };\r\n // 'http://ec2-54-233-148-155.sa-east-1.compute.amazonaws.com:8080'\r\n","export const STORAGE_KEYS = {\r\n    localUser: 'localUser'\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private router: Router) {}\r\n\r\n    canActivate() {\r\n        if (localStorage.getItem('localUser')) {\r\n            return true;\r\n        }\r\n\r\n        this.router.navigate(['/home']);\r\n        return false;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { StorageService } from '../blucake-services/storage.service';\r\nimport { Observable } from 'rxjs';\r\nimport { API_CONFIG } from '../config/api.config';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(public storage: StorageService) {\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        const localUser = this.storage.getLocalUser();\r\n\r\n        const N = API_CONFIG.baseUrl.length;\r\n        const requestToAPI = req.url.substring(0, N) === API_CONFIG.baseUrl;\r\n\r\n        if (localUser && requestToAPI) {\r\n           const headers = req.headers\r\n           .set('Content-Type', 'application/text')\r\n            .set('Content-Type', 'application/json')\r\n            .set('Authorization',  'Bearer ' + localUser.token);\r\n\r\n\r\n        const cloneReq = req.clone({ headers });\r\n\r\n        return next.handle(cloneReq);\r\n        } else {\r\n            return next.handle(req);\r\n        }\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}